command ::= SimpleCommand(word lead, word_list args, redirection_list? redirs)
	 | Pipeline(command_list list, bool async)
	 | CompoundList(command_list list, separator sep)
	 | Subshell(command_list commands)
	 | BraceGroup(command_list commands)
	 | ForLoop(identifier name, word_list words, command_list body)
	 | WhileLoop(command_list cond, command_list body)
	 | UntilLoop(command_list cond, command_list body)
	 | CaseCond(word init_word, pattern_command_pair* pairs)
	 | IfCond(cond_clause main_cond, cond_clause_list? elif_conds, command_list? else_body)
	 | Function(command_list body, redirection_list? redirs)
	 ;
